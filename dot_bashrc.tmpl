#!/usr/bin/env bash
# vim: filetype=bash

# =============================================================================
# Main Settings
# =============================================================================

# Color prompt

PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '

# Machine Specific Settings

{{ if eq .chezmoi.os "linux" }}

export TERM=xterm-256color

{{ else if eq .chezmoi.os "darwin" }}

# Remove requirement for typing 'cd' when changing directory
shopt -s autocd

# Autocorrect minor spelling errors like transposed characters in directory names during tab completion
shopt -s dirspell

# Autocorrect minor spelling errors like transposed characters in directory names in arguments already supplied to the cd command
shopt -s cdspell

# Extend CDPATH from current directory
CDPATH=".:${HOME}/Development/lab"

# For bookmarking directories
shopt -s cdable_vars

# Bookmarked directories
# export lab="${HOME}/Development/lab"
# export documents="${HOME}/Documents"

# =============================================================================
# Homebrew
# =============================================================================

eval "$(/opt/homebrew/bin/brew shellenv)"

# homebrew completions
if type brew &>/dev/null; then
  HOMEBREW_PREFIX="$(brew --prefix)"
  if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
    source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
  else
    for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*
    do
      [[ -r "${COMPLETION}" ]] && source "${COMPLETION}"
    done
  fi
fi

{{ end }}

# =============================================================================
# XDG folders
# =============================================================================

# Bash Cache
export XDG_CACHE_HOME="${HOME}/.cache"

# Bash Config
export XDG_CONFIG_HOME="${HOME}/.config"

if [ ! -d "${XDG_CONFIG_HOME}" ] ; then
  mkdir "${XDG_CONFIG_HOME}"
fi

# Bash Data
export XDG_DATA_HOME="${HOME}/.local/share"

# Bash State
export XDG_STATE_HOME="${HOME}/.local/state"
if [ ! -d "${XDG_STATE_HOME}/bash" ] ; then
  mkdir -p "${XDG_STATE_HOME}/bash"
fi

# =============================================================================
# Bash History
# =============================================================================

export HISTFILE="${XDG_STATE_HOME}/bash/history"

if [ -f "${HOME}/.bash_history" ] ; then
  mv "${HOME}/.bash_history" "${HISTFILE}"
fi

# Record each line as it gets issued
PROMPT_COMMAND='history -a'

# Huge history. Doesn't appear to slow things down, so why not?
HISTSIZE=500000
HISTFILESIZE=100000

# Avoid duplicate entries
HISTCONTROL="erasedups:ignoreboth"

# Don't record some commands
export HISTIGNORE="&:[ ]*:exit:ls:bg:fg:history"

# Displays date for history in YYYY-MM-DD HH:MM:SS format
HISTTIMEFORMAT='%F %T '

# =============================================================================
# Readline
# =============================================================================

if [ -f "${XDG_CONFIG_HOME}/readline/inputrc" ] ; then
  bind -f "${XDG_CONFIG_HOME}/readline/inputrc"
fi

# =============================================================================
# Editor
# =============================================================================

if which nvim >/dev/null 2>&1; then
  export EDITOR=nvim
elif which vim >/dev/null 2>&1; then
  export EDITOR=vim
elif which vi >/dev/null 2>&1; then
  export EDITOR=vi
fi

# =============================================================================
# Path
# =============================================================================

if [ -d "${HOME}/.local/bin" ] ; then
  PATH="${HOME}/.local/bin:${PATH}"
fi
export PATH

# =============================================================================
# Android
# =============================================================================

export ANDROID_HOME="${XDG_DATA_HOME}/android"
export ANDROID_SDK_HOME="${ANDROID_HOME}/sdk"
export ANDROID_AVD_HOME="${ANDROID_HOME}/avd"

export PATH="${ANDROID_SDK_HOME}/cmdline-tools/latest/bin:${PATH}"
export PATH="${ANDROID_SDK_HOME}/tools:${PATH}"
export PATH="${ANDROID_SDK_HOME}/emulator:${PATH}"
export PATH="${ANDROID_SDK_HOME}/platform-tools:${PATH}"

# =============================================================================
# Bat
# =============================================================================

if which bat >/dev/null 2>&1; then
  alias cat='bat'
fi

# =============================================================================
# Bundler
# =============================================================================

export BUNDLE_USER_CONFIG="${XDG_CONFIG_HOME}/bundle"
export BUNDLE_USER_CACHE="${XDG_CACHE_HOME}/bundle"                                                                 
export BUNDLE_USER_PLUGIN="${XDG_DATA_HOME}/bundle"

# =============================================================================
# Chezmoi
# =============================================================================

if which chezmoi >/dev/null 2>&1; then
  alias dotfiles='chezmoi'
  alias cm='chezmoi'
fi

# =============================================================================
# Clear
# =============================================================================

alias cl='clear'

# =============================================================================
# Copy
# =============================================================================

{{ if eq .chezmoi.os "darwin" -}}
  alias copy="tr -d '\n' | pbcopy"
{{- end }}

# =============================================================================
# Dotnet 
# =============================================================================

export DOTNET_CLI_HOME="${XDG_DATA_HOME}/dotnet"

# =============================================================================
# Eza
# =============================================================================

if which eza >/dev/null 2>&1; then
  alias _ls='EZA_COLORS="da=48;5;232;38;5;195:di=36" \
    eza \
      --created \
      --modified \
      --group \
      --group-directories-first \
      --header \
      --icons \
      --long \
      --time-style=long-iso \
      --sort=extension \
      --color=always'
  alias ll='_ls'
  alias la='_ls --all'
fi

# =============================================================================
# Git
# =============================================================================

if [ -f "${XDG_DATA_HOME}/git/git-completion.bash" ] ; then
  source "${XDG_DATA_HOME}/git/git-completion.bash"
fi

# =============================================================================
# Gradle
# =============================================================================

export GRADLE_USER_HOME="${XDG_DATA_HOME}/gradle"

# =============================================================================
# Grep
# =============================================================================

alias grep='grep --color=auto'

# =============================================================================
# Less
# =============================================================================

export LESSHISTFILE="${XDG_STATE_HOME}/less/history"

if [ -d "${LESSHISTFILE}" ] ; then
  mkdir -p "${LESSHISTFILE}"
fi

if [ -f "${HOME}/.lesshst" ] ; then
  mv "${HOME}/.lesshst" "${LESSHISTFILE}/history"
fi

# =============================================================================
# Ls
# =============================================================================

alias ls='ls --color=auto'

# Don't override eza settings if it is installed
if ! which eza >/dev/null 2>&1; then
  alias ll='ls -l --color=auto'
  alias la='ls -la --color=auto'
fi

# =============================================================================
# Neovim
# =============================================================================

if which nvim >/dev/null 2>&1; then
  alias v='nvim'
fi

# =============================================================================
# Node
# =============================================================================

export NODE_REPL_HISTORY="${XDG_DATA_HOME}/node_repl_history"

# =============================================================================
# NVM
# =============================================================================

export NVM_DIR="${XDG_DATA_HOME}/nvm"

# This loads nvm bash_completion
[ -s "${NVM_DIR}/bash_completion" ] && \. "${NVM_DIR}/bash_completion"

# This lazy loads nvm
nvm() {
  unset -f nvm
  # This loads nvm
  [ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh" --no-use
  nvm $@
}

# This resolves the default node version
DEFAULT_NODE_VER=$(cat "$NVM_DIR/alias/default")

while [ -s "$NVM_DIR/alias/$DEFAULT_NODE_VER" ] && [ ! -z "$DEFAULT_NODE_VER" ]; do
  DEFAULT_NODE_VER="$(cat "$NVM_DIR/alias/$DEFAULT_NODE_VER")"
done

# This resolves the path to the default node version
DEFAULT_NODE_VER_PATH="$(find $NVM_DIR/versions/node -maxdepth 1 -name "v${DEFAULT_NODE_VER#v}*" | sort -rV | head -n 1)"

# This adds the default node version path to PATH
if [ ! -z "$DEFAULT_NODE_VER_PATH" ]; then
  export PATH="$DEFAULT_NODE_VER_PATH/bin:$PATH"
fi

# =============================================================================
# PNPM
# =============================================================================

export PNPM_HOME="${XDG_DATA_HOME}/pnpm"

case ":${PATH}:" in
  *":${PNPM_HOME}:"*) ;;
  *) export PATH="${PNPM_HOME}:${PATH}" ;;
esac

# =============================================================================
# Ruby
# =============================================================================

# rbenv

{{ if eq .chezmoi.os "darwin" }}

  export RBENV_ROOT="${XDG_DATA_HOME}/rbenv"

{{ else if eq .chezmoi.os "linux" }}

  export RBENV_ROOT="${HOME}/.rbenv"

{{ end }}

if [ -f "${HOMEBREW_PREFIX}/bin/rbenv" ] ; then
  eval "$(${HOMEBREW_PREFIX}/bin/rbenv init -)"
fi

# =============================================================================
# Rust
# =============================================================================

# Cargo
export CARGO_HOME="${XDG_DATA_HOME}/cargo"

# Add Cargo bin directory to PATH
if [ -d "${CARGO_HOME}/bin" ] ; then
  export PATH="${CARGO_HOME}/bin:${PATH}"
fi

# =============================================================================
# Starship
# =============================================================================

if which starship >/dev/null 2>&1; then
  eval "$(starship init bash --print-full-init)"
fi

# =============================================================================
# Sqlite
# =============================================================================

export SQLITE_HISTORY="${XDG_STATE_HOME}/sqlite/sqlite_history"

# =============================================================================
# Tgpt
# =============================================================================

alias chat='tgpt'

# =============================================================================
# Tldr
# =============================================================================

export TLDR_CACHE_DIR="${XDG_CACHE_HOME}/tldr"

# =============================================================================
# Tmux
# =============================================================================

if which tmux-attach >/dev/null 2>&1; then
  alias ta='tmux-attach'
fi

if which tmux-delete >/dev/null 2>&1; then
  alias td='tmux-delete'
fi

if which tmux-new >/dev/null 2>&1; then
  alias tn='tmux-new'
fi

# =============================================================================
# Tree
# =============================================================================

alias tree='tree -C'

# =============================================================================
# VisiData
# =============================================================================

# Prevents prompting when saving with `vd`
alias vd='vd --overwrite=y'

# =============================================================================
# W3m
# =============================================================================

export W3M_DIR="${XDG_DATA_HOME}/w3m"

# =============================================================================
# Wget
# =============================================================================

# prevents ~/.wget-hsts being created
alias wget=wget --hsts-file="${XDG_DATA_HOME}/wget-hsts"

# =============================================================================
# X11
# =============================================================================

ERRFILE="${XDG_CACHE_HOME}/X11/xsession-errors"

# =============================================================================
# Xauthority
# =============================================================================

export XAUTHORITY="${XDG_RUNTIME_DIR}/Xauthority"

# =============================================================================
# Zoxide
# =============================================================================

# (autojump replacement)

if which zoxide >/dev/null 2>&1; then
  eval "$(zoxide init --cmd a bash)"
fi

# =============================================================================
# Zsh
# =============================================================================

export ZDOTDIR="${XDG_CONFIG_HOME}/zsh"

# =============================================================================
# SDK Man
# =============================================================================

# SDK man has to be placed at the end for it to work
export SDKMAN_DIR="${XDG_DATA_HOME}/sdkman"

[[ -s "${SDKMAN_DIR}/bin/sdkman-init.sh" ]] && source "${SDKMAN_DIR}/bin/sdkman-init.sh"
