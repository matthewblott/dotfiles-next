#!/usr/bin/env bash

set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons true
set period 3

# Previewer
set previewer ~/.config/lf/preview_kitty
set cleaner ~/.config/lf/clean_kitty

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
  case $(file --mime-type -Lb $f) in
    text/*) lf -remote "send $id \$$EDITOR \$fx";;
    *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
  esac
}}

cmd new_file ${{
  printf "File Name: "
  read ans
  touch $ans
}}

cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
  set -f
  case $f in
    *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
    *.tar.gz|*.tgz) tar xzvf $f;;
    *.tar.xz|*.txz) tar xJvf $f;;
    *.zip) unzip $f;;
    *.rar) unrar x $f;;
    *.7z) 7z x $f;;
  esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
  set -f
  mkdir $1
  cp -r $fx $1
  tar czf $1.tar.gz $1
  rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
  set -f
  mkdir $1
  cp -r $fx $1
  zip -r $1.zip $1
  rm -rf $1
}}

# Zoxide
cmd z %{{
  result="$(zoxide query --exclude "${PWD}" -- "$@")"
  lf -remote "send ${id} cd '${result}'"
}}

# Custom delete command needs to be present
cmd del %del $fx

cmd fzf-restore ${{
  FZF_DEFAULT_OPTS=""
  file="$(trash-list | grep "$(pwd)" | fzf | awk '{$1=$2=""; print substr($0,3)}')"

  [ -z "$file" ] && exit 1

  # THE KEY PART; yes, i know how ugly it looks
  yes 0 | trash-restore "$file"
}}


# Disable default mappings
map m
map o
map n
map "'"
map '"'
map d
map e
map f
map w

# use enter for shell commands
map <enter> shell

# execute current file (must be executable)
# map x $$f
# map X !$f

# dedicated keys for file opener actions
# map o &mimeopen $f
# map O $mimeopen --ask $f

# Mappings
map . set hidden!
map a push :z<space>
map c cut
map y copy
map p paste
map n new_file

map d del
map U fzf-restore
