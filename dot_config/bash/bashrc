#!/usr/bin/env bash

# =============================================================================
# Bash Vim Settings
# =============================================================================

# Use vim commands with the terminal, will need to set an alternative file
set -o vi

if which vi >/dev/null 2>&1; then
  export EDITOR=vi
fi

if which vim >/dev/null 2>&1; then
  export EDITOR=vim
fi

if which nvim >/dev/null 2>&1; then
  export EDITOR=nvim
fi

# =============================================================================
# XDG
# =============================================================================

export XDG_DATA_HOME="${HOME}/.local/share"
export XDG_CONFIG_HOME="${HOME}/.config"
export XDG_STATE_HOME="${HOME}/.local/state"
export XDG_CACHE_HOME="${HOME}/.cache"

# =============================================================================
# Load any necessary OS bash specifics
# =============================================================================

if [ -f "${XDG_CONFIG_HOME}/bash/machine" ] ; then
  . "${XDG_CONFIG_HOME}/bash/machine"
fi

# =============================================================================
# Path
# =============================================================================

if [ -d "${HOME}/.local/bin" ] ; then
  PATH="${HOME}/.local/bin:${PATH}"
fi
export PATH

# =============================================================================
# NVM
# =============================================================================

export NVM_DIR="${XDG_DATA_HOME}/nvm"

# This loads nvm bash_completion
[ -s "${NVM_DIR}/bash_completion" ] && \. "${NVM_DIR}/bash_completion"

# This lazy loads nvm
nvm() {
  unset -f nvm
  # This loads nvm
  [ -s "${NVM_DIR}/nvm.sh" ] && \. "${NVM_DIR}/nvm.sh" --no-use
  nvm $@
}

# This resolves the default node version
DEFAULT_NODE_VER=$(cat "$NVM_DIR/alias/default")

while [ -s "$NVM_DIR/alias/$DEFAULT_NODE_VER" ] && [ ! -z "$DEFAULT_NODE_VER" ]; do
  DEFAULT_NODE_VER="$(cat "$NVM_DIR/alias/$DEFAULT_NODE_VER")"
done

# This resolves the path to the default node version
DEFAULT_NODE_VER_PATH="$(find $NVM_DIR/versions/node -maxdepth 1 -name "v${DEFAULT_NODE_VER#v}*" | sort -rV | head -n 1)"

# This adds the default node version path to PATH
if [ ! -z "$DEFAULT_NODE_VER_PATH" ]; then
  export PATH="$DEFAULT_NODE_VER_PATH/bin:$PATH"
fi


# =============================================================================
# Aliases
# =============================================================================

if [ -f "${XDG_CONFIG_HOME}/bash/aliases" ] ; then
  . "${XDG_CONFIG_HOME}/bash/aliases"
fi

# =============================================================================
# XDG-Ninja
# =============================================================================

# bash
export HISTFILE="${XDG_STATE_HOME}/bash/history"

# dotnet
export DOTNET_CLI_HOME="${XDG_DATA_HOME}/dotnet"

# nodejs
export NODE_REPL_HISTORY="${XDG_DATA_HOME}/node_repl_history"

# rbenv
export RBENV_ROOT="${XDG_DATA_HOME}/rbenv"

# Sqlite
export SQLITE_HISTORY="${XDG_STATE_HOME}/sqlite/sqlite_history"

# w3m
export W3M_DIR="${XDG_DATA_HOME}/w3m"

ERRFILE="${XDG_CACHE_HOME}/X11/xsession-errors"

# Xauthority
export XAUTHORITY="${XDG_RUNTIME_DIR}/Xauthority"

# zsh
export ZDOTDIR="${XDG_CONFIG_HOME}/zsh"
