#!/usr/bin/env bash

# source the bashrc file
source "~/.config/bash/bashrc"

# =============================================================================
# Debian Packages
# =============================================================================

# if ! which x /dev/null 2>&1; then
#   sudo apt install x -y
# fi

# bat
if ! which bat /dev/null 2>&1; then
  sudo apt install bat -y
fi

# fzf
if ! which fzf /dev/null 2>&1; then
  sudo apt install fzf -y
fi

# gh
if ! which gh /dev/null 2>&1; then
  sudo apt install gh -y
fi

# jq
if ! which jq /dev/null 2>&1; then
  sudo apt install jq -y
fi

# ripgrep
if ! which ripgrep >/dev/null 2>&1; then
  sudo apt install ripgrep -y
fi

# tldr
if ! which tldr /dev/null 2>&1; then
  sudo apt install tldr -y
fi

# tmux
if ! which tmux >/dev/null 2>&1; then
  sudo apt install tmux -y
fi

# trash
if ! which trash >/dev/null 2>&1; then
  sudo apt install trash-cli -y
fi

# tree
if ! which tree >/dev/null 2>&1; then
  sudo apt install tree -y
fi

# xclip
if ! which xclip /dev/null 2>&1; then
  sudo apt install xclip -y
fi

# zoxide
if ! which zoxide /dev/null 2>&1; then
  sudo apt install zoxide -y
fi

# =============================================================================
# Other Packages
# =============================================================================

# dust

# =============================================================================
# NVM
# =============================================================================

if ! which nvm >/dev/null 2>&1; then
  mkdir -p "${NVM_DIR}"

  PROFILE=/dev/null bash -c 'curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash'

  # Remove the default npm directories as they should be stored using XDG
  rm -rf "$HOME/.npm"

  # need to resource file after install so npm packages can be installed
  source "${NVM_DIR}/nvm.sh"

fi

# Install the latest LTS version if it doesn't exist
if ! which node >/dev/null 2>&1; then
  # Filter to get the latest LTS version
  lts_version=$(nvm ls-remote --lts | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' | tail -n 1)
  nvm install "${lts_version}"
fi

# Re-source the bash file so the default node path is set
source "${XDG_CONFIG_HOME}/bash/bashrc"

# =============================================================================
# PNPM Packages
# =============================================================================

# First install pnpm with npm because it's already installed with nvm
if ! which pnpm >/dev/null 2>&1; then
  npm install -g pnpm
fi

# if ! which x >/dev/null 2>&1; then
#   npm install -g x
# fi

if ! which browser-sync >/dev/null 2>&1; then
  pnpm install -g browser-sync
fi

# Spellchecker for code
if ! which cspell >/dev/null 2>&1; then
  pnpm install -g cspell 
fi

# Scaffolder sometimes used by third parties
if ! which degit >/dev/null 2>&1; then
  pnpm install -g degit
fi

if ! which faker-cli >/dev/null 2>&1; then
  pnpm install -g faker-cli
fi

if ! which http-server >/dev/null 2>&1; then
  pnpm install -g http-server
fi

# Perl REPL
if ! which perli >/dev/null 2>&1; then
  pnpm install -g perli
fi

# The better-sqlite3 library installation causes a crash, needs investigation
# Convert sqlite tables to json
# if ! which sqlite-json >/dev/null 2>&1; then
#   pnpm install -g sqlite-json
# fi

# Install yarn in case it's required by thrid parties
if ! which yarn >/dev/null 2>&1; then
  pnpm install -g yarn
fi

# =============================================================================
# tmux
# =============================================================================

mkdir -p "${XDG_DATA_HOME}/tmux/plugins"

# Install Tmux Plugin Manager
git clone "https://github.com/tmux-plugins/tpm" "${XDG_DATA_HOME}/tmux/plugins/tpm"

# Install tpm plugins
"${XDG_DATA_HOME}/tmux/plugins/tpm/bin/install_plugins"
